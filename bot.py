from telegram.ext import ApplicationBuilder, CommandHandler
from fastapi import FastAPI
import uvicorn
import os
import asyncio
import threading

app = FastAPI()

@app.get("/")
def health_check():
    return {"status": "VegaMoviesBot ‡§ö‡§æ‡§≤‡•Ç ‡§π‡•à"}

async def start(update, context):
    await update.message.reply_text("üé¨ VegaMoviesBot ‡§ö‡§æ‡§≤‡•Ç ‡§π‡•à!")

async def run_bot():
    """‡§¨‡•â‡§ü ‡§ï‡•ã async ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á ‡§ö‡§≤‡§æ‡§§‡§æ ‡§π‡•à"""
    TOKEN = os.environ['BOT_TOKEN']
    bot = ApplicationBuilder().token(TOKEN).build()
    bot.add_handler(CommandHandler("start", start))
    await bot.run_polling()

def start_bot():
    """‡§•‡•ç‡§∞‡•á‡§° ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ ‡§®‡§Ø‡§æ ‡§á‡§µ‡•á‡§Ç‡§ü ‡§≤‡•Ç‡§™ ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à"""
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(run_bot())

if __name__ == "__main__":
    # ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§Ö‡§≤‡§ó ‡§•‡•ç‡§∞‡•á‡§° ‡§Æ‡•á‡§Ç ‡§ö‡§≤‡§æ‡§è‡§Ç
    bot_thread = threading.Thread(target=start_bot, daemon=True)
    bot_thread.start()
    
    # ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§•‡•ç‡§∞‡•á‡§° ‡§Æ‡•á‡§Ç FastAPI ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§ö‡§≤‡§æ‡§è‡§Ç
    uvicorn.run(app, host="0.0.0.0", port=8000)
